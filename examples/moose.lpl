(define-class Perlisp::Environment
    (extends Perlisp::Object)
    (with Perlisp::Role::Objective)
    (immutable t)

    (has parent
        :is        ro
        :isa       Perlisp::Environment
        :predicate has-parent)

    (has bindings
        :is       ro
        :isa      HashRef
        :default  {}
        :provides {
            :get    _lookup
            :set    bind
            :exists has-binding
        })

    (method lookup (&invocant this name)
       (cond ([has-binding this name] [_lookup this name])
             ([has-parent this] [lookup [parent this] name])))

    (method subenv (&rest params)
       (let ((subenv [new Perlisp::Environment :parent self]))
           [bind subenv params]
           subenv)))